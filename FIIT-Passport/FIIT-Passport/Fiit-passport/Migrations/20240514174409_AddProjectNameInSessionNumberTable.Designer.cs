// <auto-generated />
using Fiit_passport.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fiit_passport.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240514174409_AddProjectNameInSessionNumberTable")]
    partial class AddProjectNameInSessionNumberTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fiit_passport.Models.Admin", b =>
                {
                    b.Property<string>("AdminTelegramTag")
                        .HasMaxLength(33)
                        .HasColumnType("character varying(33)")
                        .HasColumnName("admin_telegram_tag");

                    b.Property<string>("AdminLink")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("admin_link");

                    b.HasKey("AdminTelegramTag");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("Fiit_passport.Models.ConnectId", b =>
                {
                    b.Property<string>("UserTelegramTag")
                        .HasMaxLength(33)
                        .HasColumnType("character varying(33)")
                        .HasColumnName("user_telegram_tag");

                    b.Property<string>("UserTelegramId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("user_telegram_id");

                    b.HasKey("UserTelegramTag");

                    b.ToTable("connect_ids");
                });

            modelBuilder.Entity("Fiit_passport.Models.Passport", b =>
                {
                    b.Property<string>("SessionId")
                        .HasColumnType("text")
                        .HasColumnName("session_id");

                    b.Property<string>("AcceptanceCriteria")
                        .HasColumnType("text")
                        .HasColumnName("error_message");

                    b.Property<string>("AuthenticatedTelegramTag")
                        .HasColumnType("text")
                        .HasColumnName("authenticated_telegram_tag");

                    b.Property<int>("CopiesNumber")
                        .HasColumnType("integer")
                        .HasColumnName("copies_number");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Goal")
                        .HasColumnType("text")
                        .HasColumnName("goal");

                    b.Property<string>("MeetingLocation")
                        .HasColumnType("text")
                        .HasColumnName("meeting_location");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("OrdererName")
                        .HasColumnType("text")
                        .HasColumnName("orderer_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("text")
                        .HasColumnName("project_description");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text")
                        .HasColumnName("project_name");

                    b.Property<string>("Result")
                        .HasColumnType("text")
                        .HasColumnName("result");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<string>("TelegramTag")
                        .HasColumnType("text")
                        .HasColumnName("telegram_tag");

                    b.HasKey("SessionId");

                    b.ToTable("passports");
                });

            modelBuilder.Entity("Fiit_passport.Models.SessionNumber", b =>
                {
                    b.Property<string>("SessionId")
                        .HasColumnType("text")
                        .HasColumnName("session_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("SessionId");

                    b.ToTable("session_numbers");
                });
#pragma warning restore 612, 618
        }
    }
}
